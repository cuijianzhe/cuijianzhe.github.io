{"relevantArticles":[{"articleTitle":"confluence自启动","articleAbstractText":"[root@system-wiki ~]# cat /usr/lib/systemd/system/wiki.service [Unit] Description=Wiki [Service] Type=simple PIDFile=/usr/local/atlassian/confluence/work/catalina.pid ExecStartPre=rm -rf /usr/local/atlassian/confluence/work/catalina.pid ExecStart=/usr/local/atlassian/confluence/bin/startup.sh ExecStop=/usr/local/atlassian/confluence/bin/shutdown.sh PrivateTmp=true Restart=always User=confluence Group=confluence [Install] WantedBy=multi-user.target pid设置文件：/usr/local/atlassian/confluence/bin/s.......","articleStatus":0,"articlePermalink":"/articles/2022/01/21/1642779793133.html","articleImg1URL":"https://b3logfile.com/bing/20190316.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"面试官：用过Linux吗？","articleAbstractText":"在Linux操作系统中，所有被操作系统管理的资源，例如网络接口卡、磁盘驱动器、打印机、输入输出设备、普通文件或是目录都被看作是一个文件。也就是说在LINUX系统中有一个重要的概念：一切都是文件。其实这是UNIX哲学的一个体现，而Linux是重写UNIX而来，所以这个概念也就传承了下来。在UNIX系统中，把一切资源都看作是文件，包括硬件设备。UNIX系统把每个硬件都看成是一个文件，通常称为设备文件，这样用户就可以用读写文件的方式实现对硬件的访问。 Linux目录树 所有可操作的计算机资源都存在于目录树这个结构中，对计算资源的访问，可以看做是对这棵目录树的访问 Linux文件系统的结构层次鲜明，就像一棵倒立的树，最顶层是其根目录： 常见目录说明： /bin： 存放二进制可执行文件(ls、cat、mkdir等)，常用命令一般都在这里； /etc： 存放系统管理和配置文件； /home： 存放所有用户文件的根目录，是用户主目录的基点，比如用户user的主目录就是/home/user，可以用~user表示； /usr ： 用于存放系统应用程序； /opt： 额外安装的可选应用程序包所放置的位置。....","articleStatus":0,"articlePermalink":"/articles/2022/03/31/1648709836067.html","articleImg1URL":"https://b3logfile.com/bing/20210224.jpg?imageView2/1/w/960/h/540/interlace/1/q/100"},{"articleTitle":"K8S二进制部署过程-v1.17.0","articleAbstractText":"一 、环境概述： cat &gt;&gt; /etc/hosts &lt;&lt;EOF 10.0.0.202 master 10.0.0.197 node1 10.0.0.163 node2 EOF 挂载数据盘： mkdir /data mkfs.xfs -f /dev/vdb mount /dev/vdb /data 安装部署 Docker，并修改 Docker 的数据存放位置。 准备 Kubernetes 的v1.16.4的相关二进制文件，具体可参考CHANGELOG-1.16。（略） 系统主机名初始化，主机 SSH 授信免密登录。 ssh-keygen -t rsa ssh-copy-id -i ~/.ssh/id_rsa.pub node1 ssh-copy-id -i ~/.ssh/id_rsa.pub node2 关闭 selinux，关闭 iptables 准备部署目录，并把/data/kubernetes/bin 加入到环境变量 PATH 中。 mkdir -p /data/kubernetes/{cfg,bin,ssl,log} echo \"export P....","articleStatus":0,"articlePermalink":"/articles/2019/12/24/1577178596028.html","articleImg1URL":"https://b3logfile.com/bing/20181025.jpg?imageView2/1/w/960/h/540/interlace/1/q/100"},{"articleTitle":"K8S基础搭建使用","articleAbstractText":"一、 K8S架构 除了核心组件，还有一些推荐的Add-ons： 组件名称 说明 kube-dns 负责为整个集群提供DNS服务 Ingress Controller 为服务提供外网入口 Heapster 提供资源监控 Dashboard 提供GUI Federation 提供跨可用区的集群 Fluentd-elasticsearch 提供集群日志采集、存储与查询 K8S核心功能： 自愈: 重新启动失败的容器，在节点不可用时，替换和重新调度节点上的容器，对用户定义的健康检查不响应的容器会被中止，并且在容器准备好服务之前不会把其向客户端广播。 弹性伸缩: 通过监控容器的cpu的负载值,如果这个平均高于80%,增加容器的数量,如果这个平均低于10%,减少容器的数量 服务的自动发现和负载均衡: 不需要修改您的应用程序来使用不熟悉的服务发现机制，Kubernetes 为容器提供了自己的 IP 地址和一组容器的单个 DNS 名称，并可以在它们之间进行负载均衡。 滚动升级和一键回滚: Kubernetes 逐渐部署对应用程序或其配置的更改，同时监视应用程序运行状况，以确保它不会同时终止所有实例。 .....","articleStatus":0,"articlePermalink":"/articles/2019/12/12/1576117964389.html","articleImg1URL":"https://www.qstack.com.cn/wp-content/uploads/2019/08/1563068809299.png?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"关于 Kubernetes 的这些原理，你一定要了解","articleAbstractText":"kubernetes 已经成为容器编排领域的王者，它是基于容器的集群编排引擎，具备扩展集群、滚动升级回滚、弹性伸缩、自动治愈、服务发现等多种特性能力。 本文将带着大家快速了解 kubernetes ，了解我们谈论 kubernetes 都是在谈论什么。 kubernetes 架构 从宏观上来看 kubernetes 的整体架构，包括 Master、Node 以及 Etcd。 Master 即主节点，负责控制整个 kubernetes 集群。它包括 Api Server、Scheduler、Controller 等组成部分。它们都需要和 Etcd 进行交互以存储数据。 Api Server：主要提供资源操作的统一入口，这样就屏蔽了与 Etcd 的直接交互。功能包括安全、注册与发现等。 Scheduler：负责按照一定的调度规则将 Pod 调度到 Node 上。 Controller：资源控制中心，确保资源处于预期的工作状态。 Node 即工作节点，为整个集群提供计算力，是容器真正运行的地方，包括运行容器、kubelet、kube-proxy。 kubelet：主要工作包括管理容器的生命周....","articleStatus":0,"articlePermalink":"/articles/2020/08/15/1597459617030.html","articleImg1URL":"https://file.cjzshilong.cn/pictures_file/kubernetes-area.png?imageView2/1/w/1280/h/720/interlace/1/q/100"}]}