{"relevantArticles":[{"articleTitle":"表格数据提取","articleAbstractText":"#!/usr/bin/python # -- coding: utf-8 -- # @Time : 2020/12/14 13:07 # @Author : cuijianzhe # @File : xlwt.py # @Software: PyCharm import openpyxl import requests import os import random name = input('请输入表格名称:') path = name + '.xlsx' wb = openpyxl.load_workbook(path) sheetnames = wb.sheetnames #获取文件中所有的 sheet sheetData = wb[sheetnames[0]] #第一个 sheet 的内容 rows_max = sheetData.max_row #最大行数 cols_max = sheetData.max_column #最大列数 ApprovalNumber = sheetData.cell(row = 1,column = 4).value def get_case.......","articleStatus":0,"articlePermalink":"/articles/2020/12/14/1607958685328.html","articleImg1URL":"https://b3logfile.com/bing/20210323.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"Django 使用ldap认证细节","articleAbstractText":"项目地址 https://github.com/etianen/django-python3-ldap LDAP django_python3_ldap 如果不添加cn查找用户会出现同步时出现如下报错： LDAP bind failed: LDAPInvalidCredentialsResult - 49 - invalidCredentials - None - None - bindResponse - None CommandError: Could not connect to LDAP server 添加admin Generic: Posix Group (posixGroup)，并且增加password属性，用于登录查找,或者个人用户也可以 ### LDAP # The URL of the LDAP server. LDAP_AUTH_URL = \"ldap://172.16.16.4\" # Initiate TLS on connection. LDAP_AUTH_USE_TLS = False # The LDAP search base for loo....","articleStatus":0,"articlePermalink":"/articles/2020/12/26/1608967701991.html","articleImg1URL":"https://b3logfile.com/file/2020/12/image-67c609a7.png?imageView2/2/w/1280/format/jpg/interlace/1/q/100"},{"articleTitle":"IB网卡流量带宽监控","articleAbstractText":"全部指标参考值来自如下命令： root@ucloud-wlcb-gpu-061:/etc/zabbix/externalscripts# /usr/bin/mlnx_perf -i ibs31 -t 10 -c 1 Initializingmlnx_perf... Samplingstarted. rx_vport_rdma_unicast_packets: 6,478,784.59  &nbsp; rx_vport_rdma_unicast_bytes: 24,807,016,550Bps &nbsp; = 198,456.13Mbps &nbsp; tx_vport_rdma_unicast_packets: 6,459,893.9  &nbsp; tx_vport_rdma_unicast_bytes: 24,692,785,131.59Bps = 197,542.28Mbps &nbsp;  &nbsp; &nbsp; &nbsp; &nbsp; rx_corrected_bits_phy: 106  &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nb....","articleStatus":0,"articlePermalink":"/articles/2023/11/18/1700290073339.html","articleImg1URL":"https://b3logfile.com/file/2023/11/image-20231118115159-dswdt25-O5MKsks.png?imageView2/2/w/1280/format/jpg/interlace/1/q/100"},{"articleTitle":"通过Python3自动登录网络设备进行配置备份","articleAbstractText":"十年生死两茫茫，不思量，自难忘","articleStatus":0,"articlePermalink":"/articles/2023/07/27/1690424326684.html","articleImg1URL":"https://b3logfile.com/bing/20200610.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"利用Python对windows桌面自动更换壁纸","articleAbstractText":"根据时间星期几判断用哪张壁纸 # !/usr/bin/env python3 # -- coding:utf-8 -- import requests # import pywintypes import win32api import win32con import win32gui import os import datetime,time from PIL import Image def get_week_day(date): week_day_dict = { 0 : '星期一', 1 : '星期二', 2 : '星期三', 3 : '星期四', 4 : '星期五', 5 : '星期六', 6 : '星期天', } day = date.weekday() return week_day_dict[day] # print(get_week_day(datetime.datetime.now())) def getImages(): filepath = os.path.split(os.path.realpath(file))[0] # 本地目录路径 # pr....","articleStatus":0,"articlePermalink":"/articles/2020/10/29/1603943310078.html","articleImg1URL":"https://b3logfile.com/bing/20220323.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"}]}