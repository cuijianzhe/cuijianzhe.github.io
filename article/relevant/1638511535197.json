{"relevantArticles":[{"articleTitle":"Docker安装配置mysql镜像","articleAbstractText":"拉取最新镜像 docker pull mysql:latest ^也可以去https://hub.docker.com/_/mysql?tab=tags安装指定版本号的镜像^ 运行mysql容器 docker run -itd --name mysql8.0 -p 3306:3306 -e MYSQL_ROOT_PASSWORD=123456 mysql:8.0.27 （注：-p 3306:3306 左边的是容器的端口号，右边的是服务器的端口号。服务器的端口可以直接映射到容器的端口号上） （注：123456 是数据库的密码可自行修改） （注：8.0.27 是数据库的版本根据自己的版本进行更改，如何输入错误可能会导致在次拉取镜像） 查看容器状态 docker ps 进入MySQL容器登录MySQL docker exec -it mysql8.0 bash 登录Mysql mysql -u root -p 然后开启阿里云服务器的3306端口 连接成功！","articleStatus":0,"articlePermalink":"/articles/2021/12/03/1638513021734.html","articleImg1URL":"https://b3logfile.com/bing/20190619.jpg?imageView2/1/w/960/h/540/interlace/1/q/100"},{"articleTitle":"Django应用容器化 ","articleAbstractText":"Docker 三大核心要素：镜像(Image)、容器(Container)、仓库(Registry) （先整体看下流程，再逐个演示） 镜像（Image） 打包了业务代码及运行环境的包，是静态的文件，不能直接对外提供服务。 容器（Container） 镜像的运行时，可以对外提供服务。本质上讲是利用namespace和cgroup等技术在宿主机中创建的独立的虚拟空间。 仓库（Registry） 公有仓库，Docker Hub，阿里，网易... 私有仓库，企业内部搭建 Docker Registry，Docker官方提供的镜像仓库存储服务 Harbor, 是Docker Registry的更高级封装，它除了提供友好的Web UI界面，角色和用户权限管理，用户操作审计等功能 镜像访问地址形式 registry.devops.com/demo/hello:latest,若没有前面的url地址，则默认寻找Docker Hub中的镜像，若没有tag标签，则使用latest作为标签 公有的仓库中，一般存在这么几类镜像 操作系统基础镜像（centos，ubuntu，suse，alpine） 中间件（ng....","articleStatus":0,"articlePermalink":"/articles/2020/04/12/1586677258146.html","articleImg1URL":"https://b3logfile.com/file/2020/04/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4-4c514c66.jpg?imageView2/2/w/1280/format/jpg/interlace/1/q/100"}]}