{"relevantArticles":[{"articleTitle":"并发工具类 ---Semaphore","articleAbstractText":"模拟场景： 北京开往邯郸的火车K7761开始售票，在9号站台验票进站，进站口只有三个，许许多多的乘客排成长队验票进站。 那么此时三个进站口就是有限的公共资源，乘客们就是线程。 Semaphore信号量是用来控制同时访问特定资源的线程数量，它通过协调各个线程，以保证合理的使用公共资源。 public class testMain { public static void main(String[] args) { int ticketGate = 3;//检票口 int numberOfPassengers = 9527;//乘客数量d Semaphore semaphore = new Semaphore(ticketGate); //允许进入3人,剩下的人想进入时，需等待前面的人已经进入站。 for (int i = 0; i &lt; numberOfPassengers; i++) { new Through(i,semaphore).start(); } } static class Through extends Thread{ private int n; private ....","articleStatus":0,"articlePermalink":"/articles/2019/04/15/1555318114318.html","articleImg1URL":"https://img.hacpai.com/bing/20180701.jpg?imageView2/1/w/960/h/540/interlace/1/q/100"},{"articleTitle":"多线程之同步屏障CyclicBarrier的使用","articleAbstractText":"工欲善其事，必先利其器，要想搞懂多线程，首先要把jdk自带的多线程工具搞懂","articleStatus":0,"articlePermalink":"/articles/2019/04/10/1554887221480.html","articleImg1URL":"https://img.hacpai.com/bing/20180705.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"}]}