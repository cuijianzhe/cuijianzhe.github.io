{"relevantArticles":[{"articleTitle":"openstack系列-dashboard部署","articleAbstractText":"horizon节点安装 yum install openstack-dashboard 编辑/etc/openstack-dashboard/local_settings文件 将仪表板配置为在控制器节点上使用OpenStack服务： OPENSTACK_HOST = \"10.200.51.100\" 允许主机访问仪表板： ALLOWED_HOSTS = ['*', 'localhost'] 配置memcached会话存储服务 SESSION_ENGINE = 'django.contrib.sessions.backends.cache' CACHES = { 'default': { 'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache', 'LOCATION': '10.200.51.100:11211', }, } 启用标识API版本3： OPENSTACK_KEYSTONE_URL = \"http://%s:5000/v3\" % OPENSTACK_HOST 启用对域的支持 OPENS....","articleStatus":0,"articlePermalink":"/articles/2019/10/15/1571128802984.html","articleImg1URL":"https://b3logfile.com/file/2019/10/image-f54adfd5.png?imageView2/2/w/1280/format/jpg/interlace/1/q/100"},{"articleTitle":"kolla-ansible部署openstack多节点","articleAbstractText":"环境介绍 ceph搭建先搞定 对接openstack配置参考这里: 主机： IP 作用 主机名 192.168.51.204 存储节点 cinder 192.168.51.209 计算节点 computer3 192.168.51.210 计算节点 compute2 192.168.51.211 计算节点 compute1 192.168.51.212 control节点 control 同步时间 在ceph1上安装ntp服务，是2、3同步1的时间 [root@ceph1 ~]# yum install ntp -y &amp;&amp; systemctl enable ntpd.service &amp;&amp; systemctl start ntpd.service [root@ceph1 ~]# systemctl start ntpd [root@ceph2 ~]# ntpdate 192.168.51.212 [root@ceph3 ~]# ntpdate 192.168.51.212 或者所有节点配置统一互联网ntp服务 ntpdate ntp1.aliyun.c......","articleStatus":0,"articlePermalink":"/articles/2019/11/01/1572607586305.html","articleImg1URL":"https://b3logfile.com/file/2019/11/image-50dcc3d1.png?imageView2/2/w/1280/format/jpg/interlace/1/q/100"},{"articleTitle":"面试官：用过Linux吗？","articleAbstractText":"在Linux操作系统中，所有被操作系统管理的资源，例如网络接口卡、磁盘驱动器、打印机、输入输出设备、普通文件或是目录都被看作是一个文件。也就是说在LINUX系统中有一个重要的概念：一切都是文件。其实这是UNIX哲学的一个体现，而Linux是重写UNIX而来，所以这个概念也就传承了下来。在UNIX系统中，把一切资源都看作是文件，包括硬件设备。UNIX系统把每个硬件都看成是一个文件，通常称为设备文件，这样用户就可以用读写文件的方式实现对硬件的访问。 Linux目录树 所有可操作的计算机资源都存在于目录树这个结构中，对计算资源的访问，可以看做是对这棵目录树的访问 Linux文件系统的结构层次鲜明，就像一棵倒立的树，最顶层是其根目录： 常见目录说明： /bin： 存放二进制可执行文件(ls、cat、mkdir等)，常用命令一般都在这里； /etc： 存放系统管理和配置文件； /home： 存放所有用户文件的根目录，是用户主目录的基点，比如用户user的主目录就是/home/user，可以用~user表示； /usr ： 用于存放系统应用程序； /opt： 额外安装的可选应用程序包所放置的位置。....","articleStatus":0,"articlePermalink":"/articles/2022/03/31/1648709836067.html","articleImg1URL":"https://b3logfile.com/bing/20210224.jpg?imageView2/1/w/960/h/540/interlace/1/q/100"},{"articleTitle":"openstack创建镜像，开启云主机","articleAbstractText":"创建虚拟机 基本环境 查看自己的CPU是否支持全虚拟化虚拟化技术且是64位的 Inter： cat /proc/cpuinfo | grep --color vmx AMD： cat /proc/cpuinfo | grep --color svm 看看flag有没有上面的vmx或者是svm，有的话就是支持全虚拟化技术 安装KVM 安装KVM模块、管理工具和libvirt，命令行安装： yum install qemu-kvm libvirt libguestfs-tools virt-install virt-manager libvirt-python -y 注： qemu-kvm ： kvm主程序， KVM虚拟化模块 virt-manager： KVM图形化管理工具 libvirt： 虚拟化服务 libguestfs-tools : 虚拟机的系统管理工具 virt-install ： 安装虚拟机的实用工具 。比如 virt-clone克隆工具就是这个包安装的 libvirt-python ： python调用libvirt虚拟化服务的api接口库文件 查看安装完ＫＶＭ后的服.......","articleStatus":0,"articlePermalink":"/articles/2019/11/07/1573111362693.html","articleImg1URL":"https://b3logfile.com/file/2019/11/image-a0e4fe9b.png?imageView2/2/w/1280/format/jpg/interlace/1/q/100"},{"articleTitle":"linux服务器与H3C交换机聚合口对接","articleAbstractText":"交换机与Linux服务器多网卡bond模式对接 交换机多端口和服务器对接时，需要确定是否需要配置聚合或者不配置聚合，并且配置聚合的时候还需要确认是静态聚合还是动态聚合，当然这和当前服务器网卡的bond模式有关。下面我们了解下Linux服务器的7种bond模式，说明如下： 第一种模式：mod=0 ，即：(balance-rr) Round-robin policy（平衡抡循环策略） 特点：传输数据包顺序是依次传输（即：第1个包走eth0，下一个包就走eth1\u2026.一直循环下去，直到最后一个传输完毕），此模式提供负载平衡和容错能力；但是我们知道如果一个连接或者会话的数据包从不同的接口发出的话，中途再经过不同的链路，在客户端很有可能会出现数据包无序到达的问题，而无序到达的数据包需要重新要求被发送，这样网络的吞吐量就会下降。这种模式需要接入交换机配置静态链路聚合配置。 V5/V7交换机侧的静态典型配置 [DeviceA] interface Bridge-Aggregation 1 //默认静态 [DeviceA-Bridge-Aggregation1] quit [DeviceA] inter....","articleStatus":0,"articlePermalink":"/articles/2022/06/22/1655900167936.html","articleImg1URL":"https://b3logfile.com/bing/20221022.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"}]}