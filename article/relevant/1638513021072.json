{"relevantArticles":[{"articleTitle":"Docker安装配置nginx镜像","articleAbstractText":"第一种方式：在容器内部修改配置文件实现代理 拉取镜像 docker pull nginx 启动容器 docker run --name nginxweb -p 8080:80 -d nginx 此时可以打开网站 ip:8080 访问nginx首页 进入容器 docker exec -it nginxweb /bin/bash 更新源的索引，这样才能获取到最新的软件包 apt-get update 安装vim apt-get install vim 如果是将80映射为其他端口，需要注释掉最下面的那句默认的配置 #include /etc/nginx/conf.d/*.conf; 新增一个server配置如下，其他地方都不用动： server{ listen 80; server_name localhost; location /MerryChristmas/ { proxy_pass http://ip:63302/index/v1; proxy_redirect default; } } 访问代理的地址(:80可省略) ip:80/MerryChristmas 修改后校....","articleStatus":0,"articlePermalink":"/articles/2021/12/03/1638511535202.html","articleImg1URL":"https://b3logfile.com/bing/20190405.jpg?imageView2/1/w/960/h/540/interlace/1/q/100"},{"articleTitle":"Django应用容器化 ","articleAbstractText":"Docker 三大核心要素：镜像(Image)、容器(Container)、仓库(Registry) （先整体看下流程，再逐个演示） 镜像（Image） 打包了业务代码及运行环境的包，是静态的文件，不能直接对外提供服务。 容器（Container） 镜像的运行时，可以对外提供服务。本质上讲是利用namespace和cgroup等技术在宿主机中创建的独立的虚拟空间。 仓库（Registry） 公有仓库，Docker Hub，阿里，网易... 私有仓库，企业内部搭建 Docker Registry，Docker官方提供的镜像仓库存储服务 Harbor, 是Docker Registry的更高级封装，它除了提供友好的Web UI界面，角色和用户权限管理，用户操作审计等功能 镜像访问地址形式 registry.devops.com/demo/hello:latest,若没有前面的url地址，则默认寻找Docker Hub中的镜像，若没有tag标签，则使用latest作为标签 公有的仓库中，一般存在这么几类镜像 操作系统基础镜像（centos，ubuntu，suse，alpine） 中间件（ng....","articleStatus":0,"articlePermalink":"/articles/2020/04/12/1586677258146.html","articleImg1URL":"https://b3logfile.com/file/2020/04/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4-4c514c66.jpg?imageView2/2/w/1280/format/jpg/interlace/1/q/100"}]}